#+title: Basic UI Configuration
#+PROPERTY: header-args:emacs-lisp :tangle ../emacs.d/basic-ui.el

* Basic UI Config

** Turn off some of the default UI stuff we don't want

#+begin_src emacs-lisp
  (setq inhibit-startup-message t)

  (scroll-bar-mode -1)        ; Disable visible scrollbar
  (tool-bar-mode -1)          ; Disable the toolbar
  (tooltip-mode -1)           ; Disable tooltips
  (set-fringe-mode 10)        ; Give some breathing room

  (menu-bar-mode -1)          ; Disable the menu bar

  ;; Set up the visible bell
  (setq visible-bell t)

#+end_src

** Window Transparency

#+begin_src emacs-lisp

  (defun set-transparency (percent)
    (interactive "nPercent Transparency: ")

    ;; clear current alpha from frame alist
    (setq default-frame-alist (assq-delete-all 'alpha default-frame-alist))

    ;; set alpha on current frame, and add to alist for new ones
    (set-frame-parameter (selected-frame) 'alpha (cons percent percent))
    (add-to-list 'default-frame-alist (cons 'alpha (cons percent percent))))

  (if (string-equal system-name "SXM00164")
      (set-transparency 98))

  #+end_src

** Line Numbers

#+begin_src emacs-lisp

  (column-number-mode)
  (global-display-line-numbers-mode t)

  ;; Disable line numbers for some modes
  (dolist (mode '(org-mode-hook
                  term-mode-hook
                  shell-mode-hook
                  treemacs-mode-hook
                  eshell-mode-hook
                  mu4e-main-mode-hook
                  mu4e-headers-mode-hook
                  vterm-mode-hook))
    (add-hook mode (lambda () (display-line-numbers-mode 0))))

#+end_src

** Setup Theme/Look-and-Feel

#+begin_src emacs-lisp

       (use-package doom-themes
         :custom
         (doom-themes-enable-bold t)
         (doom-themes-enable-italic t)
         (doom-themes-visual-bell-config)
         (doom-themes-neotree-config)
         (doom-themes-treemacs-theme "doom-atom")
         (doom-themes-treemacs-config)
         (doom-themes-org-config)
         :config
         (load-theme 'doom-palenight t))

       (use-package doom-modeline
         :custom
         (display-time-default-load-average nil) ;; disable display of cpu load
         (display-time-day-and-date 1)           ;; display date along with time
         (doom-modeline-time-icon nil)           ;; hide the clock icon, which isn't very useful
         :config
         (display-battery-mode 1)                ;; show battery status
         (display-time-mode 1)                   ;; show time and date
         :hook
         (after-init . doom-modeline-mode))

       (use-package rainbow-delimiters
         :hook (prog-mode . rainbow-delimiters-mode))

#+end_src

** Add which-key

#+begin_src emacs-lisp

  (use-package which-key
    :diminish which-key-mode
    :config
    (which-key-mode)
    (setq which-key-idle-delay 1))

#+end_src

** Ivy and Counsel
   - Completion Framework

#+begin_src emacs-lisp

  (use-package ivy
    :diminish
    :bind (("C-s" . swiper)
           :map ivy-minibuffer-map
           ("TAB" . ivy-alt-done)
           ("C-l" . ivy-alt-done)
           ("C-j" . ivy-next-line)
           ("C-k" . ivy-previous-line)
           :map ivy-switch-buffer-map
           ("C-k" . ivy-previous-line)
           ("C-l" . ivy-done)
           ("C-d" . ivy-switch-buffer-kill)
           :map ivy-reverse-i-search-map
           ("C-k" . ivy-previous-line)
           ("C-d" . ivy-reverse-i-search-kill))
    :config
    (ivy-mode 1))

  (use-package counsel
    :bind (("M-x" . counsel-M-x)
           ("C-x b" . counsel-ibuffer)
           ("C-x C-f" . counsel-find-file)
           ("C-M-j" . 'counsel-switch-buffer)
           :map minibuffer-local-map
           ("C-r" . 'counsel-minibuffer-history))
    :custom
    (counsel-linux-app-format-function #'counsel-linux-app-format-function-name-only)
    :config
    (counsel-mode 1))

  (use-package ivy-rich
    :after ivy
    :init
    (ivy-rich-mode 1))

#+end_src

#+RESULTS:
: counsel-minibuffer-history

** Improved candidate sorting

#+begin_src emacs-lisp

  (use-package ivy-prescient
    :after counsel
    :custom
    (ivy-prescient-enable-filtering nil)
    :config
    (ivy-prescient-mode 1))

#+end_src

** Helpful : better help documentation

#+begin_src emacs-lisp

  (use-package helpful
    :commands (helpful-callable helpful-variable helpful-command helpful-key)
    :custom
    (counsel-describe-function-function #'helpful-callable)
    (counsel-describe-variable-function #'helpful-variable)
    :bind
    ([remap describe-function] . counsel-describe-function)
    ([remap describe-command] . helpful-command)
    ([remap describe-variable] . counsel-describe-variable)
    ([remap describe-key] . helpful-key))

#+end_src

** Fonts

#+begin_src emacs-lisp
(set-face-attribute 'default nil :font "Fira Code Retina")

;; Set the fixed pitch face
(set-face-attribute 'fixed-pitch nil :font "Fira Code Retina")

;; Set the variable pitch face
(set-face-attribute 'variable-pitch nil :font "Cantarell" :weight 'regular)
#+end_src

#+RESULTS:
